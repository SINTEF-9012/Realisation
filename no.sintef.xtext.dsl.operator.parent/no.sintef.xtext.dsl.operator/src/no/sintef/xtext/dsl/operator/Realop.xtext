grammar no.sintef.xtext.dsl.operator.Realop with org.eclipse.xtext.common.Terminals

generate realop "http://www.sintef.no/xtext/dsl/operator/Realop"

Realop:
	operators+=Operator*;
	
Operator:
	OP_TOKEN name=ID OPEN_OP_TOKEN 
			PRE_TOKEN COND_ST_TOKEN expPre=Expression  COND_END_TOKEN 
			POST_TOKEN COND_ST_TOKEN expPost=Expression COND_END_TOKEN 
		CLOSE_OP_TOKEN
	;

Expression:
	 TwoSideExpression | OneSideExpression | IsExpression
	;

OneSideExpression returns Expression:
	NotExp
;

TwoSideExpression returns Expression:
	OrExp| AndExp | XorExp
;

OrExp:
	left=(IsExpression | NotExp) OR_TOKEN right=Expression
;

AndExp:
	left=(IsExpression | NotExp) AND_TOKEN right=Expression
;

XorExp:
	left=(IsExpression | NotExp) XOR_TOKEN right=Expression
;


NotExp: 
	NOT_TOKEN exp=IsExpression
;

IsExpression returns Expression :
	IsRealised | IsPositive | IsNegative
	;
	
IsRealised :
	PRED_REALISED_TOKEN '(' featureName=ID ')'
;

IsPositive :
	PRED_POSITIVE_TOKEN '(' featureName=ID ')'
;

IsNegative :
	PRED_NEGATIVE_TOKEN '(' featureName=ID ')'
;

NOT_TOKEN : 'not';

AND_TOKEN : 'and';
OR_TOKEN : 'or';
XOR_TOKEN: 'xor';

PRED_REALISED_TOKEN : 'realised';
PRED_POSITIVE_TOKEN : 'positive';
PRED_NEGATIVE_TOKEN : 'negative';

OP_TOKEN : 'operator';
OPEN_OP_TOKEN : '{';
CLOSE_OP_TOKEN : '}';
PRE_TOKEN : 'pre';
POST_TOKEN : 'post';
COND_ST_TOKEN : ':';
COND_END_TOKEN : ';';
