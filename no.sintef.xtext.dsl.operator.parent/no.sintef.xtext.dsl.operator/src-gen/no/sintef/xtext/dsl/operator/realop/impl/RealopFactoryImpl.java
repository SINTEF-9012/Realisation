/**
 * generated by Xtext 2.9.2
 */
package no.sintef.xtext.dsl.operator.realop.impl;

import no.sintef.xtext.dsl.operator.realop.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class RealopFactoryImpl extends EFactoryImpl implements RealopFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static RealopFactory init()
  {
    try
    {
      RealopFactory theRealopFactory = (RealopFactory)EPackage.Registry.INSTANCE.getEFactory(RealopPackage.eNS_URI);
      if (theRealopFactory != null)
      {
        return theRealopFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new RealopFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RealopFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case RealopPackage.REALOP: return createRealop();
      case RealopPackage.OPERATOR: return createOperator();
      case RealopPackage.EXPRESSION: return createExpression();
      case RealopPackage.TERMINAL_EXPRESSION: return createTerminalExpression();
      case RealopPackage.LOGIC: return createLogic();
      case RealopPackage.PREDICATE: return createPredicate();
      case RealopPackage.PREDICATES: return createPredicates();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Realop createRealop()
  {
    RealopImpl realop = new RealopImpl();
    return realop;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Operator createOperator()
  {
    OperatorImpl operator = new OperatorImpl();
    return operator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression createExpression()
  {
    ExpressionImpl expression = new ExpressionImpl();
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TerminalExpression createTerminalExpression()
  {
    TerminalExpressionImpl terminalExpression = new TerminalExpressionImpl();
    return terminalExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Logic createLogic()
  {
    LogicImpl logic = new LogicImpl();
    return logic;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Predicate createPredicate()
  {
    PredicateImpl predicate = new PredicateImpl();
    return predicate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Predicates createPredicates()
  {
    PredicatesImpl predicates = new PredicatesImpl();
    return predicates;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RealopPackage getRealopPackage()
  {
    return (RealopPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static RealopPackage getPackage()
  {
    return RealopPackage.eINSTANCE;
  }

} //RealopFactoryImpl
