/**
 * generated by Xtext 2.9.2
 */
package no.sintef.xtext.dsl.operator.realop.impl;

import no.sintef.xtext.dsl.operator.realop.Predicates;
import no.sintef.xtext.dsl.operator.realop.RealopPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Predicates</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link no.sintef.xtext.dsl.operator.realop.impl.PredicatesImpl#isRealised <em>Realised</em>}</li>
 *   <li>{@link no.sintef.xtext.dsl.operator.realop.impl.PredicatesImpl#isPositive <em>Positive</em>}</li>
 *   <li>{@link no.sintef.xtext.dsl.operator.realop.impl.PredicatesImpl#isNegative <em>Negative</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PredicatesImpl extends MinimalEObjectImpl.Container implements Predicates
{
  /**
   * The default value of the '{@link #isRealised() <em>Realised</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRealised()
   * @generated
   * @ordered
   */
  protected static final boolean REALISED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isRealised() <em>Realised</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRealised()
   * @generated
   * @ordered
   */
  protected boolean realised = REALISED_EDEFAULT;

  /**
   * The default value of the '{@link #isPositive() <em>Positive</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPositive()
   * @generated
   * @ordered
   */
  protected static final boolean POSITIVE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isPositive() <em>Positive</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPositive()
   * @generated
   * @ordered
   */
  protected boolean positive = POSITIVE_EDEFAULT;

  /**
   * The default value of the '{@link #isNegative() <em>Negative</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNegative()
   * @generated
   * @ordered
   */
  protected static final boolean NEGATIVE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isNegative() <em>Negative</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNegative()
   * @generated
   * @ordered
   */
  protected boolean negative = NEGATIVE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PredicatesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RealopPackage.Literals.PREDICATES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isRealised()
  {
    return realised;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRealised(boolean newRealised)
  {
    boolean oldRealised = realised;
    realised = newRealised;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RealopPackage.PREDICATES__REALISED, oldRealised, realised));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isPositive()
  {
    return positive;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPositive(boolean newPositive)
  {
    boolean oldPositive = positive;
    positive = newPositive;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RealopPackage.PREDICATES__POSITIVE, oldPositive, positive));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isNegative()
  {
    return negative;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNegative(boolean newNegative)
  {
    boolean oldNegative = negative;
    negative = newNegative;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RealopPackage.PREDICATES__NEGATIVE, oldNegative, negative));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RealopPackage.PREDICATES__REALISED:
        return isRealised();
      case RealopPackage.PREDICATES__POSITIVE:
        return isPositive();
      case RealopPackage.PREDICATES__NEGATIVE:
        return isNegative();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RealopPackage.PREDICATES__REALISED:
        setRealised((Boolean)newValue);
        return;
      case RealopPackage.PREDICATES__POSITIVE:
        setPositive((Boolean)newValue);
        return;
      case RealopPackage.PREDICATES__NEGATIVE:
        setNegative((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RealopPackage.PREDICATES__REALISED:
        setRealised(REALISED_EDEFAULT);
        return;
      case RealopPackage.PREDICATES__POSITIVE:
        setPositive(POSITIVE_EDEFAULT);
        return;
      case RealopPackage.PREDICATES__NEGATIVE:
        setNegative(NEGATIVE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RealopPackage.PREDICATES__REALISED:
        return realised != REALISED_EDEFAULT;
      case RealopPackage.PREDICATES__POSITIVE:
        return positive != POSITIVE_EDEFAULT;
      case RealopPackage.PREDICATES__NEGATIVE:
        return negative != NEGATIVE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (realised: ");
    result.append(realised);
    result.append(", positive: ");
    result.append(positive);
    result.append(", negative: ");
    result.append(negative);
    result.append(')');
    return result.toString();
  }

} //PredicatesImpl
